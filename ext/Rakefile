EXT_DIR = File.expand_path(File.dirname __FILE__)
RTMIDI_DIR = "#{EXT_DIR}/rtmidi-2.0.1"

HOST_OS = RbConfig::CONFIG['host_os'].downcase
OS_X = (HOST_OS =~ /darwin/)
WINDOWS = ((HOST_OS =~ /win/ and HOST_OS !~ /darwin/) or HOST_OS =~ /mingw/)
LINUX = (HOST_OS =~ /linux/)


def cd(dir)
  puts "cd #{dir}"
  Dir.chdir(dir)
end

def run(cmd)
  puts cmd
  unless system(cmd)
    puts "Error: command exited with return value #{$?.exitstatus}"
    exit $?.exitstatus
  end
end


PREDEFINE = case
  when OS_X then "__MACOSX_CORE__"
  when WINDOWS then "__WINDOWS_MM__"
  when LINUX then "__UNIX_JACK__" # TODO: could also be "__LINUX_ALSA__"
  else
end

SYSTEM_LIBS = case
  when OS_X then "-framework CoreMIDI -framework CoreAudio -framework CoreFoundation"
  when WINDOWS then "-lwinmm"
  when LINUX then "-ljack" # TODO: could also be "-lasound -lpthread" for ALSA
  else
end


desc 'run the make task'
task :default => :make

desc 'build the RtMidi C++ code'
task :make do
  require "mkmf"
  abort "missing gcc" unless find_executable "gcc"
  abort "missing g++" unless find_executable "g++"

  cd RTMIDI_DIR
  run "g++ -O3 -Wall -Iinclude -fPIC -D#{PREDEFINE} -c RtMidi.cpp -o RtMidi.o"
  puts

  cd EXT_DIR
  run "g++ -g -Wall -I#{RTMIDI_DIR} -fPIC -c ruby-rtmidi.cpp"
  puts
  run "g++ -g -Wall -I#{RTMIDI_DIR} -I#{RTMIDI_DIR}/include -D#{PREDEFINE} -fPIC -shared -o ruby-rtmidi.so " +
        "ruby-rtmidi.o #{RTMIDI_DIR}/RtMidi.o #{SYSTEM_LIBS}"
end